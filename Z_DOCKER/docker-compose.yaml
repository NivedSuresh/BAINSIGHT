version: '3.9'
services:

  redis:
    container_name: redis
    image: 'redis/redis-stack:latest'
    ports:
      - '6379:6379'
    volumes:
      - ./data:/data
    environment:
      REDIS_ARGS: --save 20 1
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  scylla:
    container_name: scylla
    image: scylladb/scylla:5.2.0
    ports:
      - "9042:9042"
    restart: always
    environment:
      - SCYLLA_CLUSTER_NAME=scylla-docker
      - SCYLLA_DC=datacenter1
      - SCYLLA_LISTEN_ADDRESS=0.0.0.0
      - SCYLLA_RPC_ADDRESS=0.0.0.0
      - SCYLLA_NUM_TOKENS=256
      - SCYLLA_AUTO_BOOTSTRAP=true
#    command: --seeds=scylla-node1,scylla-node2 --memory 750M --api-address 0.0.0.0 --reactor-backend=epoll

  postgres:
    container_name: postgres
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_PASSWORD=2255'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  eureka-server:
    container_name: eureka-server
    image: 'nivedsuresh/eureka-server:1.0.0'
    ports:
      - '8761:8761'
    environment:
      EUREKA_HOSTNAME: 'localhost'

  config-server:
    container_name: config-server
    image: 'nivedsuresh/config-server:1.0.0'
    ports:
      - '8081:8081'
    environment:
      GIT_USERNAME: 'NivedSuresh'
      GIT_ACCESS_TOKEN: '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'

  gateway:
    container_name: gateway
    image: 'nivedsuresh/gateway:1.0.0'
    ports:
      - '8080:8080'
    environment:
      CONFIG_SERVER_URI: 'http://config-server:8081'
    depends_on:
      eureka-server:
        condition: service_started
      config-server:
        condition: service_started

  order-processing:
    container_name: order-processing
    image: 'nivedsuresh/order-processing:1.0.0'
    ports:
      - '8087:8087'
    environment:
      CONFIG_SERVER_URI: 'http://config-server:8081'
    depends_on:
      eureka-server:
        condition: service_started
      config-server:
        condition: service_started
      gateway:
        condition: service_started
      broker:
        condition: service_started
#
#  risk-management:
#    container_name: risk-management
#    image: 'nivedsuresh/risk-management:1.0.0'
#    ports:
#      - '8089:8089'
#    environment:
#      CONFIG_SERVER_URI: 'http://config-server:8081'
#      REDIS_HOST: 'redis'
#      KAFKA_BOOTSTRAP_SERVER: 'broker:29092'
#    depends_on:
#      eureka-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#      gateway:
#        condition: service_started
#      redis:
#        condition: service_started
#      broker:
#        condition: service_started
#
#  portfolio:
#    container_name: portfolio
#    image: 'nivedsuresh/portfolio:1.0.0'
#    ports:
#      - '8088:8088'
#    environment:
#      DB_HOST: 'postgres'
#      DB_PORT: '5432'
#      DB_NAME: 'portfolio_service'
#      CONFIG_SERVER_URI: 'http://config-server:8081'
#      KAFKA_BOOTSTRAP_SERVER: 'broker:29092'
#    depends_on:
#      eureka-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#      gateway:
#        condition: service_started
#      postgres:
#        condition: service_started
#      broker:
#        condition: service_started
#
#  order-persistence:
#    container_name: order-persistence
#    image: 'nivedsuresh/order-persistence:1.0.0'
#    ports:
#      - '8086:8086'
#    environment:
#      CONFIG_SERVER_URI: 'http://config-server:8081'
#      REDIS_HOST: 'redis'
#      KAFKA_BOOTSTRAP_SERVER: 'broker:29092'
#      DB_HOST: 'postgres'
#      DB_PORT: '5432'
#      DB_NAME: 'order_persistence'
#      SPRING_PROFILES_ACTIVE: 'dev,test,sim'
#    depends_on:
#      eureka-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#      gateway:
#        condition: service_started
#      postgres:
#        condition: service_started
#      broker:
#        condition: service_started

  history:
    container_name: history
    image: 'nivedsuresh/history:1.0.0'
    ports:
      - '8085:8084'
    environment:
      CONFIG_SERVER_URI: 'http://config-server:8081'
      KAFKA_BOOTSTRAP_SERVER: 'broker:29092'
      SPRING_PROFILES_ACTIVE: 'dev,test,sim'
      SPRING_CASSANDRA_CONTACT_POINTS: 'scylla:9042'
#    depends_on:
#      eureka-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#      gateway:
#        condition: service_started
#      scylla:
#        condition: service_started
#      broker:
#        condition: service_started




# WATCHLIST

#  watchlist:
#    container_name: watchlist
#    image: 'nivedsuresh/watchlist:1.0.0'
#    ports:
#      - '8083:8083'
#    environment:
#      CONFIG_SERVER_URI: 'http://config-server:8081'
#      SPRING_PROFILES_ACTIVE: 'dev,test,sim'
#      REDIS_HOST: 'redis'
#      DB_NAME: 'watchlist'
#      DB_HOST: 'postgres'
#      DB_PORT: '5432'
#    depends_on:
#      eureka-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#      gateway:
#        condition: service_started
#      redis:
#        condition: service_started
#      postgres:
#        condition: service_started



# DATA AGGREGATOR #

#  data-aggregator:
#    container_name: data-aggregator
#    image: 'nivedsuresh/data-aggregator:1.0.0'
#    ports:
#      - '8084:8084'
#    environment:
#      SPRING_APPLICATION_PORT: '8084'
#      CONFIG_SERVER_URI: 'http://config-server:8081'
#      SPRING_PROFILES_ACTIVE: 'dev,test,sim'
#      REDIS_HOST: 'redis'
#      KAFKA_BOOTSTRAP_SERVER: 'broker:29092'
#      USER_SERVICE_CHANNEL: 'aeron:udp?endpoint=224.0.1.1:40456|reliable=true'
#    depends_on:
#      eureka-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#      gateway:
#        condition: service_started
#      broker:
#        condition: service_started
#      redis:
#        condition: service_started



# MARKET UPDATE #

#  market-update:
#    container_name: market-update
#    image: 'nivedsuresh/market-update:1.0.0'
#    ports:
#      - '8091:8083'
#    environment:
#      SPRING_APPLICATION_PORT: '8083'
#      CONFIG_SERVER_URI: 'http://config-server:8081'
#      SPRING_PROFILES_ACTIVE: 'dev,test,sim'
#      KAFKA_BOOTSTRAP_SERVER: 'broker:29092'
#      USER_SERVICE_CHANNEL: 'aeron:udp?endpoint=224.0.1.1:40456|reliable=true'
#    depends_on:
#      eureka-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#      gateway:
#        condition: service_started
#      broker:
#        condition: service_started



# AUTH SERVER

#  auth-server:
#    container_name: auth-server
#    image: 'nivedsuresh/auth-server:1.0.0'
#    ports:
#      - '8082:8082'
#    environment:
#      CONFIG_SERVER_URI: 'http://config-server:8081'
#      SPRING_PROFILES_ACTIVE: 'dev,test,sim'
#      SPRING_APPLICATION_PORT: '8082'
#      DB_NAME: 'bainsight'
#      DB_HOST: 'bainsight.cxcu24moqdnl.ap-south-1.rds.amazonaws.com'
#      DB_PORT: '5432'
#      DB_USERNAME: 'bainsight_admin'
#      DB_PASSWORD: '#Foronline'
#    depends_on:
#      eureka-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#      gateway:
#        condition: service_started
#      postgres:
#        condition: service_started



volumes:
  postgres_data:



